name: assign to Board

on:
  issues:
    types:
      - opened
  pull_request:
    types:
      - opened

env:
  SYNC_APP_ID:        ${{ secrets.WLGDEV_SYNCAPP_APP_ID }}
  SYNC_CLIENT_ID:     ${{ secrets.WLGDEV_SYNCAPP_CLIENT_ID }}
  SYNC_CLIENT_SECRET: ${{ secrets.WLGDEV_SYNCAPP_CLIENT_SECRET }}
  SYNC_PRIVATE_KEY:   ${{ secrets.WLGDEV_SYNCAPP_PRIVATE_KEY }}
  PROJECT_OWNER: wlgdev
  PROJECT_ID:    5

jobs:
  board-update:
    permissions:
      issues: write
      pull-requests: read
      repository-projects: write

    name: add to board
    runs-on: ubuntu-latest
    steps:
      - name: Auth # https://github.com/tibdex/github-app-token
        id: auth
        uses: tibdex/github-app-token@v2
        with:
          app_id:      ${{ env.SYNC_APP_ID }}
          private_key: ${{ env.SYNC_PRIVATE_KEY }}

      - uses: actions/add-to-project@v1.0.2
        with:
          project-url: https://github.com/orgs/${{ env.PROJECT_OWNER }}/projects/${{ env.PROJECT_ID }}
          github-token: ${{ steps.auth.outputs.token }}

      - uses: actions/github-script@v7
        if: github.event_name == 'issues'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const title = context.payload.issue.title;
            const issue_number = context.payload.issue.number;
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            let type;
            if (title.toLowerCase().includes('[request]')) {
              type = 'üí°Request';
            } else if (title.toLowerCase().includes('[feature]')) {
              type = 'üöÄFeature';
            } else if (title.toLowerCase().includes('[task]')) {
              type = 'ü™ßTask';
            } else if (title.toLowerCase().includes('[bug]')) {
              type = 'üêûBug';
            }
            
            if (type) {
              await github.request('PATCH /repos/{owner}/{repo}/issues/{issue_number}', {
                owner,
                repo,
                issue_number,
                type, // this is the new REST API field!
                headers: {
                  'X-GitHub-Api-Version': '2022-11-28',
                  'Accept': 'application/vnd.github+json'
                }
              });
              console.log(`‚úÖ Issue type set to "${type}"`);
            } else {
              console.log('‚ö†Ô∏è No matching type found in title.');
            }
